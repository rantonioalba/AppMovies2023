//
//  LoginPresenter.swift
//  AppMovies
//
//  Created Roberto Antonio Alba Hernández on 17/02/23.
//  Copyright © 2023 ___ORGANIZATIONNAME___. All rights reserved.
//
//  Template generated by Juanpe Catalán @JuanpeCMiOS
//

import UIKit

class LoginPresenter: LoginPresenterProtocol {
    
    weak private var view: LoginViewProtocol?
    var interactor: LoginInteractorProtocol?
    private let router: LoginWireframeProtocol
    private var requestToken : RequestToken?
    private var session : Session?

    init(interface: LoginViewProtocol, interactor: LoginInteractorProtocol?, router: LoginWireframeProtocol) {
        self.view = interface
        self.interactor = interactor
        self.router = router
    }
    
    func getRequestToken(completion: @escaping ((Bool, String) -> ())) {
        interactor?.getRequestToken(completion: { response, error in
            completion(response, error)
        })
    }
    
    func setRequestToken(requestToken : RequestToken, andSession session : Session)  {
        self.requestToken = requestToken
        self.session = session
    }
    
    func authenticate(completion: @escaping ((Bool) -> ())) {
        router.goToAuthenticate(requestToken: requestToken?.request_token ?? "", completion: completion)
    }
    
    func validateLogin(withUserName userName: String, andPassword pasword: String, completion: @escaping ((Bool, String) -> ())) {
        interactor?.validateLogin(withUserName: userName, andPassword: pasword, completion: completion)
    }
    
    func getRequestToken() -> String {
        return requestToken?.request_token ?? ""
    }
    
    func goToHome() {
        router.goToHome()
    }
}
