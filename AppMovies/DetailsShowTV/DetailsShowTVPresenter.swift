//
//  DetailsShowTVPresenter.swift
//  AppMovies
//
//  Created Roberto Antonio Alba Hernández on 19/02/23.
//  Copyright © 2023 ___ORGANIZATIONNAME___. All rights reserved.
//
//  Template generated by Juanpe Catalán @JuanpeCMiOS
//

import UIKit

class DetailsShowTVPresenter: DetailsShowTVPresenterProtocol {
    
    weak private var view: DetailsShowTVViewProtocol?
    var interactor: DetailsShowTVInteractorProtocol?
    private let router: DetailsShowTVWireframeProtocol
    
    private var imagesPathSet = Set<String?>()
    private var arrayImages: [String?] = [String?]()


    init(interface: DetailsShowTVViewProtocol, interactor: DetailsShowTVInteractorProtocol?, router: DetailsShowTVWireframeProtocol) {
        self.view = interface
        self.interactor = interactor
        self.router = router
    }
    
    func getProviders(idShowTV: Int?, completion: @escaping ((WatchTVProviders?) -> ())) {
        interactor?.getProviders(idShowTV: idShowTV, completion: completion)
    }
    
    func getProviders(idShowTV: Int?, completionHandler: @escaping ([String : AnyObject]?, APIError?) -> Void) {
        interactor?.getProviders(idShowTV: idShowTV, completionHandler: completionHandler)
    }
    
    func getProviders(idShowTV: Int?) {
        interactor?.getProviders(idShowTV: idShowTV, completionHandler: { objects, error in
            
            if let objects = objects {
//                self.watchTVProviders = objects
                
//                let arrayKeys = Array(self.watchTVProviders)
//
//
//                let array = arrayKeys.first(where: {$0.key == "results"})?.value as? [String:AnyObject]
//
//                array.map { value in
//                    print(value.values)
//                }
                
                
                
                for (key, values) in objects {
                    print("kind: \(key)")
                    if key == "results" {
                        print(values)
                        if let array1 = values as? [String:AnyObject] {
                            for (key, values) in array1 {
                                print(key)
                                if let array2 = values as? [String:AnyObject] {
                                    for (key, values) in array2 {
                                        print(key)
                                        if let array3 = values as? [[String:AnyObject]] {
                                            
                                            for element in array3 {
                                                print(element)
                                                
                                                for (key, values) in element {
                                                    print(key)
                                                    
                                                    if key == "logo_path" {
                                                        self.imagesPathSet.insert(values as? String)
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                                    
                    }
                }
                
                print(self.imagesPathSet)
                
                let array = Array(self.imagesPathSet)
                self.arrayImages = array
                print(array)
                self.view?.didWatchTVProvidersImages(providersImages: array)
            }
        })
    }
    
    func getGenres(genresIds: [Int]) -> String {
        var descriptions = [String]()
        var genreDescription : String = ""
        if let genres = Utils.genres.genres {
            
           descriptions = genresIds.map { value in
               genres.first(where: { $0.id == value})?.name ?? ""
            }
            
            genreDescription = descriptions.joined(separator: " ")
        }
                
        return genreDescription
    }
    
    func getCountries(originCountry: [String]) -> String {
        var names = [String]()
        var namesCountries  : String = ""
        if let countries = Utils.countries {
            
            for origin in originCountry {
                if let  nameCountry = countries.first(where: {$0.iso3166_1 == origin})?.englishName {
                    names.append(nameCountry)
                    
                }
            }
            
            namesCountries = names.joined(separator: "")
        }
        return namesCountries
    }
}
