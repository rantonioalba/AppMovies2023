//
//  HomeInteractor.swift
//  AppMovies
//
//  Created Roberto Antonio Alba Hernández on 18/02/23.
//  Copyright © 2023 ___ORGANIZATIONNAME___. All rights reserved.
//
//  Template generated by Juanpe Catalán @JuanpeCMiOS
//

import UIKit

class HomeInteractor: HomeInteractorProtocol {
    
    weak var presenter: HomePresenterProtocol?
    private var popularShowTV : ShowsTV?
    private var topRatedShowTV : ShowsTV?
    private var onTV : ShowsTV?
    private var airingToday : ShowsTV?
    private var showsTV : [ShowsTV?] = [ShowsTV?]()
    
    func getPopularShows(completion: @escaping ((ShowsTV?) -> ())) {
        var params = ["api_key":APIManager.API_KEY, "language":"en_US", "page":"1"]
        
        APIManager.fetchObject(apiURL: APIURL.POPULAR_SHOW, parameters: params) { (object : ShowsTV?, error : APIError?) in
            
            if let object = object {
                completion(object)
            } else {
                completion(nil)
            }
        }
    }
    
    func getShowsTV(completion: @escaping (([ShowsTV?]) -> ())) {
        let dispatchGroup = DispatchGroup()
        
        
        
        getPopularShows(dispatchGroup)
        getTopRated(dispatchGroup)
        getOnTV(dispatchGroup)
        getAiringToday(dispatchGroup)
        getGenres(dispatchGroup)
        getCountries(dispatchGroup)
        
        dispatchGroup.notify(queue: .main) {
            
            self.showsTV.append(self.popularShowTV)
            self.showsTV.append(self.topRatedShowTV)
            self.showsTV.append(self.onTV)
            self.showsTV.append(self.airingToday)
            
            completion(self.showsTV)
        }
    }
    
    func getPopularShows(_ dispatchGroup: DispatchGroup)  {
        dispatchGroup.enter()
        let params = ["api_key":APIManager.API_KEY, "language":"en_US", "page":"1"]
        APIManager.fetchObject(apiURL: APIURL.POPULAR_SHOW, parameters: params) { (object : ShowsTV?, error : APIError?) in
            
            if let object = object {
                self.popularShowTV = object
            }
            dispatchGroup.leave()
        }
    }
    
    func getTopRated(_ dispatchGroup : DispatchGroup)  {
        dispatchGroup.enter()
        let params = ["api_key":APIManager.API_KEY, "language":"en_US", "page":"1"]
        APIManager.fetchObject(apiURL: APIURL.TOP_RATED, parameters: params) { (object : ShowsTV?, error : APIError?) in
            
            if let object = object {
                self.topRatedShowTV = object
            }
            dispatchGroup.leave()
        }
    }
    
    func getOnTV(_ dispatchGroup : DispatchGroup)  {
        dispatchGroup.enter()
        let params = ["api_key":APIManager.API_KEY, "language":"en_US", "page":"1"]
        APIManager.fetchObject(apiURL: APIURL.ON_TV, parameters: params) { (object : ShowsTV?, error : APIError?) in
            
            if let object = object {
                self.onTV = object
            }
            dispatchGroup.leave()
        }
    }
    
    func getAiringToday(_ dispatchGroup : DispatchGroup)  {
        dispatchGroup.enter()
        let params = ["api_key":APIManager.API_KEY, "language":"en_US", "page":"1"]
        APIManager.fetchObject(apiURL: APIURL.AIRING_TODAY, parameters: params) { (object : ShowsTV?, error : APIError?) in
            
            if let object = object {
                self.airingToday = object
            }
            dispatchGroup.leave()
        }
    }
    
    func getGenres(_ dispatchGroup : DispatchGroup) {
        dispatchGroup.enter()
        
        let params = ["api_key":APIManager.API_KEY, "language":"en_US"]
        
        APIManager.fetchObject(apiURL: APIURL.GENRES, parameters: params) { (object : GenresTV?, error : APIError?) in
            
            if let object = object {
                Utils.genres = object
            }
            dispatchGroup.leave()
        }
    }
    
    func getCountries(_ dispatchGroup : DispatchGroup) {
        dispatchGroup.enter()
        
        let params = ["api_key":APIManager.API_KEY]
       
        APIManager.fetchObjects(apiURL: APIURL.COUNTRIES, parameters: params) { (objects : [Country]? , error : APIError?) in

            if let objects = objects {
                Utils.countries = objects
            }
        }
        dispatchGroup.leave()
    }
    
    func logOut(completion: @escaping ((Bool) -> ())) {
        APIManager.deleteSession { response, errorApi in
            if let response = response {
                completion(response)
            } else {
                completion(false)
            }
        }
    }
}
